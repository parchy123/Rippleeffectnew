A EditText is an overlay over TextView that configures itself to be editable. It is the predefined subclass of TextView that includes rich editing capabilities.
EditText Attributes
Following are the important attributes related to EditText control. You can check Android official documentation for complete list of attributes and related methods which you can use to change these attributes are run time. Inherited from android.widget.TextView Class:
Attribute Description
1.android:autoText= If set, specifies that this TextView has a textual input method and automatically corrects some common spelling errors.
2.android:drawableBottom= This is the drawable to be drawn below the text.
3.android:drawableRight= This is the drawable to be drawn to the right of the text.
4.android:editable= If set, specifies that this TextView has an input method.
5.android:text= This is the Text to display.


Inherited from android.view.View Class:
Attribute Description
1.android:background= This is a drawable to use as the background.
2.android:contentDescription= This defines text that briefly describes content of the view.
3.android:id= This supplies an identifier name for this view,
4.android:onClick= This is the name of the method in this View's context to invoke when the view is clicked.
5.android:visibility= This controls the initial visibility of the view.

Example
This example will take you through simple steps to show how to create your own Android application using Linear Layout and EditText.
Step Description
1. You will use Android Studio to create an Android application and name it as GUIDemo2 under a package com.example.guidemo2 as explained in the Hello World Example chapter.
2 Modify src/MainActivity.java file to add a click event.
2 Modify the detault content of res/layout/activity_main.xml file to include Android UI control.
3 Define required constants in res/values/strings.xml file
4 Run the application to launch Android emulator and verify the result of the changes done in the application.
Following is the content of the modified main activity filesrc/com.example.guidemo2/MainActivity.java.




package com.example.guidemo2;
import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener; import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
public class MainActivity extends Activity
{
@Override
protected void onCreate(Bundle savedInstanceState)
{
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
final EditText eText; final Button btn;
eText = (EditText) findViewById(R.id.edittext);
btn = (Button) findViewById(R.id.button);
btn.setOnClickListener(new OnClickListener() {

public void onClick(View v)
{ String str = eText.getText().toString();
Toast msg = Toast.makeText(getBaseContext(),str, Toast.LENGTH_LONG); msg.show(); msg.show(); } }); } }


Following will be the content of res/layout/activity_main.xml file:
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent" android:layout_height="match_parent"
android:paddingBottom="@dimen/activity_vertical_margin" android:paddingLeft="@dimen/activity_horizontal_margin"
android:paddingRight="@dimen/activity_horizontal_margin" android:paddingTop="@dimen/activity_vertical_margin"
tools:context=".MainActivity" >
<TextView android:id="@+id/textView1"
android:layout_width="wrap_content"
android:layout_height="wrap_content" android:layout_alignParentLeft="true" android:layout_alignParentTop="true"
android:layout_marginLeft="14dp" android:layout_marginTop="18dp"
android:text="@string/example_edittext" />
<Button android:id="@+id/button"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_alignLeft="@+id/textView1" android:layout_below="@+id/textView1"
android:layout_marginTop="130dp" android:text="@string/show_the_text" />
<EditText android:id="@+id/edittext"
android:layout_width="fill_parent"
android:layout_height="wrap_content"
android:layout_alignLeft="@+id/button"
android:layout_below="@+id/textView1"
android:layout_marginTop="61dp"
android:ems="10"
android:text="@string/enter_text"
android:inputType="text" />
</RelativeLayout>


Following will be the content of res/values/strings.xml to define these new constants:
<?xml version="1.0" encoding="utf-8"?>
<resources>
<string name="app_name">GUIDemo1</string>
<string name="action_settings">Settings</string>
<string name="example_edittext">Example showing EditText</string>
<string name="show_the_text">Show the Text</string>
<string name="enter_text">text changes</string>
</resources>