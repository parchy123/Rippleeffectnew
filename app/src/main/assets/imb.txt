A ImageButton is a AbsoluteLayout which enables you to specify the exact location of its children. This shows a button with an image (instead of text) that can be pressed or clicked by the user.
Example
This example will take you through simple steps to show how to create your own Android application using Linear Layout and ImageButton.
Step Description
1 You will use Android Studio to create an Android application and name it as GUIDemo5 under a package com.example.guidemo5 as explained in the Hello World Example chapter. 2 Modify src/MainActivity.java file to add a click event.
2 Modify the default content of res/layout/activity_main.xml file to include Android UI control.
3 Define required constants in res/values/strings.xml file
4 Run the application to launch Android emulator and verify the result of the changes done in the application.
Following is the content of the modified main activity filesrc/com.example.guidemo5/MainActivity.java. This file can include each of the fundamental lifecycle methods.
package com.example.guidemo5;
import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.Toast;
public class MainActivity extends Activity
{
ImageButton imgButton;
@Override
protected void onCreate(Bundle savedInstanceState)
{
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 addListenerOnButton(); }
 private void addListenerOnButton()
 { imgButton = (ImageButton) findViewById (R.id.imageButton1);
  imgButton.setOnClickListener(new OnClickListener() {
   @Override
public void onClick(View view)
{ Toast.makeText(MainActivity.this,"ImageButton Clicked : tutorialspoint.com", Toast.LENGTH_SHORT).show(); }
});
}


Following will be the content of res/layout/activity_main.xml file:
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
 android:layout_height="match_parent" android:paddingBottom="@dimen/activity_vertical_margin"
 android:paddingLeft="@dimen/activity_horizontal_margin" android:paddingRight="@dimen/activity_horizontal_margin"
 android:paddingTop="@dimen/activity_vertical_margin" tools:context=".MainActivity" >
 <TextView android:id="@+id/textView1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content" android:text="@string/example_imagebutton" />
 <ImageButton android:id="@+id/imageButton1" android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignRight="@+id/textView1"
 android:layout_below="@+id/textView1"
 android:layout_marginRight="35dp"
 android:layout_marginTop="32dp"
 android:contentDescription= "@string/android_launcher_image" android:src="@drawable/ic_launcher" />
 </RelativeLayout>


 Following will be the content of res/values/strings.xml to define these new constants:
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
 <string name="app_name">GUIDemo5</string>
 <string name="action_settings">Settings</string>
 <string name="example_imagebutton">Example showing ImageButton</string> <string name="android_launcher_image"></string>
 </resources>